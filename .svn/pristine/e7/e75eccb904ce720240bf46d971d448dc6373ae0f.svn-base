#include "leds.h"
#include <delay.h>
#include <gpio.h>
#include <stdbool.h>
#include <stdlib.h>

#define GreenCounter TIM3->CCR2
#define RedCounter TIM3->CCR1
#define BlueCounter TIM3->CCR3

#define ARR_VAL 999
#define PSC_VAL 256

void leds_change_intensity(float red, float green, float blue) {
    TIM3->CR1 |= TIM_CR1_UDIS;
    GreenCounter = (ARR_VAL + 1) * green;
    RedCounter = (ARR_VAL + 1) * red;
    BlueCounter = (ARR_VAL + 1) * blue;
    TIM3->CR1 &= ~TIM_CR1_UDIS;
}

static void setup_RCC() {
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOBEN;
    RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;

    __NOP();
}

static void setup_gpio() {
    GPIOafConfigure(RED_LED_GPIO, RED_LED_PIN, GPIO_OType_PP, GPIO_Low_Speed, GPIO_PuPd_NOPULL,
                    GPIO_AF_TIM3);
    GPIOafConfigure(GREEN_LED_GPIO, GREEN_LED_PIN, GPIO_OType_PP, GPIO_Low_Speed, GPIO_PuPd_NOPULL,
                    GPIO_AF_TIM3);
    GPIOafConfigure(BLUE_LED_GPIO, BLUE_LED_PIN, GPIO_OType_PP, GPIO_Low_Speed, GPIO_PuPd_NOPULL,
                    GPIO_AF_TIM3);
    GPIOoutConfigure(GREEN2_LED_GPIO, GREEN2_LED_PIN, GPIO_OType_PP, GPIO_Low_Speed,
                     GPIO_PuPd_NOPULL);
}

void setup_timer() {
    TIM3->PSC = PSC_VAL;
    TIM3->ARR = ARR_VAL;
    TIM3->EGR = TIM_EGR_UG;
    TIM3->CCR1 = (ARR_VAL + 1) * 0.5;
    TIM3->CCR2 = (ARR_VAL + 1) * 0.5;
    TIM3->CCR3 = (ARR_VAL + 1) * 0.5;

    TIM3->CCMR1 = TIM_CCMR1_OC1M_Msk | TIM_CCMR1_OC1PE | TIM_CCMR1_OC2M_Msk | TIM_CCMR1_OC2PE;
    TIM3->CCMR2 = TIM_CCMR2_OC3PE | TIM_CCMR2_OC3M_Msk;

    TIM3->CCER = TIM_CCER_CC1E | TIM_CCER_CC1P | TIM_CCER_CC2E | TIM_CCER_CC2P | TIM_CCER_CC3E |
                 TIM_CCER_CC3P;

    TIM3->CR1 = TIM_CR1_ARPE | TIM_CR1_CEN;
}

void leds_setup() {
    setup_RCC();
    setup_gpio();
    Green2LEDoff();
    setup_timer();
}